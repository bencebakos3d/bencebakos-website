---
import Layout from "../layouts/Layout.astro";
import LandingVideo from "../components/LandingVideo.astro";
---

<Layout title="Bence Bakos">
		<section class="section-loading-screen"></section>
		<main class="currently-loading">
			<LandingVideo />
			<section>
				<h1>Bence Bakos</h1>
				<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
			</section>
		</main>
		
		
</Layout>

<style>
	:root {
		--astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
	}

	h1 {
		margin: 2rem 0;
	}
	.currently-loading {
		height: 100vh;
	}
	.section-loading-screen {
		width: 100vw;
		height: 100vh;
		position: fixed;
		z-index: 255;
		background-color: pink;
	}
	.hidden {
		display: none;
	}
	.text-gradient {
		font-weight: 900;
		background-image: var(--astro-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 100% 200%;
		background-position-y: 100%;
		border-radius: 0.4rem;
		animation: pulse 4s ease-in-out infinite;
	}

	@keyframes pulse {
		0%,
		100% {
			background-position-y: 0%;
		}
		50% {
			background-position-y: 80%;
		}
	}

	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		background: #4f39fa;
		padding: 1rem;
		border-radius: 0.4rem;
		color: var(--color-bg);
	}

	.instructions code {
		font-size: 0.875em;
		border: 0.1em solid var(--color-border);
		border-radius: 4px;
		padding: 0.15em 0.25em;
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>

<script>

	let images = []
	for (let i = 1; i < 101; i++) {
		images[i] = new Image();
		images[i].src = `./engine_video/engine_${i}.jpg`;
		if (i === 100) {
		}
	}

	Promise.all(
	images.map((img) => {
		if (img.complete) return Promise.resolve(img.naturalHeight !== 0);
		return new Promise((resolve) => {
		img.addEventListener('load', () => resolve(true));
		img.addEventListener('error', () => resolve(false));
		});
	})
	).then(() => {
		document.querySelector("main").classList.remove("currently-loading");
		document.querySelector(".section-loading-screen").classList.add("hidden")
	});


	

</script>